#include <gtest/gtest.h>
#include <sstream>
#include "libnbt/parser.h"

TEST(TestParse, ShouldReadThis) {
   const char binary[] = {
      '\x0a', '\x00', '\x00', '\x09', '\x08', '\x00', '\x44', '\x77', '\x65', '\x6c', '\x6c', '\x65', '\x72', '\x73', '\x0a', '\x04',
'\x00', '\x00', '\x00', '\x09', '\x06', '\x00', '\x61', '\x63', '\x74', '\x6f', '\x72', '\x73', '\x0a', '\x06', '\x00', '\x00',
'\x00', '\x04', '\x02', '\x00', '\x49', '\x44', '\x74', '\x01', '\x00', '\x00', '\xff', '\xff', '\xff', '\xff', '\x04', '\x02',
'\x00', '\x54', '\x53', '\x0b', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x04', '\x02', '\x00', '\x49',
'\x44', '\xfb', '\x00', '\x00', '\x00', '\xff', '\xff', '\xff', '\xff', '\x04', '\x02', '\x00', '\x54', '\x53', '\x06', '\x00',
'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x04', '\x02', '\x00', '\x49', '\x44', '\xfe', '\x00', '\x00', '\x00',
'\xff', '\xff', '\xff', '\xff', '\x04', '\x02', '\x00', '\x54', '\x53', '\x39', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
'\x00', '\x00', '\x04', '\x02', '\x00', '\x49', '\x44', '\x26', '\x01', '\x00', '\x00', '\xff', '\xff', '\xff', '\xff', '\x04',
'\x02', '\x00', '\x54', '\x53', '\x05', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x04', '\x02', '\x00',
'\x49', '\x44', '\x61', '\x01', '\x00', '\x00', '\xff', '\xff', '\xff', '\xff', '\x04', '\x02', '\x00', '\x54', '\x53', '\x18',
'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x04', '\x02', '\x00', '\x49', '\x44', '\x60', '\x01', '\x00',
'\x00', '\xff', '\xff', '\xff', '\xff', '\x04', '\x02', '\x00', '\x54', '\x53', '\x39', '\x00', '\x00', '\x00', '\x00', '\x00',
'\x00', '\x00', '\x00', '\x00', '\x09', '\x06', '\x00', '\x61', '\x63', '\x74', '\x6f', '\x72', '\x73', '\x0a', '\x01', '\x00',
'\x00', '\x00', '\x04', '\x02', '\x00', '\x49', '\x44', '\x23', '\x01', '\x00', '\x00', '\xff', '\xff', '\xff', '\xff', '\x04',
'\x02', '\x00', '\x54', '\x53', '\x0e', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x09', '\x06',
'\x00', '\x61', '\x63', '\x74', '\x6f', '\x72', '\x73', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x09', '\x06', '\x00',
'\x61', '\x63', '\x74', '\x6f', '\x72', '\x73', '\x0a', '\x04', '\x00', '\x00', '\x00', '\x04', '\x02', '\x00', '\x49', '\x44',
'\x25', '\x01', '\x00', '\x00', '\xff', '\xff', '\xff', '\xff', '\x04', '\x02', '\x00', '\x54', '\x53', '\x13', '\x00', '\x00',
'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x04', '\x02', '\x00', '\x49', '\x44', '\x24', '\x01', '\x00', '\x00', '\xff',
'\xff', '\xff', '\xff', '\x04', '\x02', '\x00', '\x54', '\x53', '\x16', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
'\x00', '\x04', '\x02', '\x00', '\x49', '\x44', '\x20', '\x01', '\x00', '\x00', '\xff', '\xff', '\xff', '\xff', '\x04', '\x02',
'\x00', '\x54', '\x53', '\x2a', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x04', '\x02', '\x00', '\x49',
'\x44', '\x1f', '\x01', '\x00', '\x00', '\xff', '\xff', '\xff', '\xff', '\x04', '\x02', '\x00', '\x54', '\x53', '\x3c', '\x00',
'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00',
   };

   std::string str(binary, sizeof(binary));
   std::istringstream iss(str);
   auto parser = nbt::Parser(iss);
   std::vector<std::shared_ptr<nbt::BaseTag>> tags = parser.parse();
   ASSERT_EQ(1, tags.size());
   for(auto tag: tags) {
      std::cout << ">>>>>" << tag->toString() << std::endl;
   }
}